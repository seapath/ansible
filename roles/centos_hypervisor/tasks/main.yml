# Copyright (C) 2024 RTE
# Copyright (C) 2024 Red Hat, Inc.
# SPDX-License-Identifier: Apache-2.0

- name: Enable docker.service
  ansible.builtin.systemd:
    name: docker.service
    enabled: yes
    state: started
- name: Enable docker.socket
  ansible.builtin.systemd:
    name: docker.socket
    enabled: yes
    state: started

- name: Add vhost_vsock to /etc/modules-load.d
  ansible.builtin.copy:
    src: modules/vhost_vsock.conf
    dest: /etc/modules-load.d/vhost_vsock.conf
    owner: root
    group: root
    mode: 0751

- name: Add sriov driver to /etc/modules-load.d
  ansible.builtin.copy:
    src: modules/sriov_driver.conf
    dest: /etc/modules-load.d/sriov_driver.conf
    owner: root
    group: root
    mode: 0751
  when: sriov_driver is defined
- name: Load the sriov module
  community.general.modprobe:
    name: "{{ sriov_driver }}"
    state: present
  when: sriov_driver is defined

- name: Add sriov sysfs rules
  template:
    src: sriov.conf.j2
    dest: /etc/tmpfiles.d/sriov.conf
    mode: '0644'
  with_items: "{{ sriov | dict2items }}"
  when: sriov is defined
  register: sriov_tmpfiles
- name: Copy sysfs.d cpumask
  template:
    src: tmpfiles-workqueue_cpumask.conf.j2
    dest: /etc/tmpfiles.d/tmpfiles-workqueue_cpumask.conf
    mode: '0644'
  register: tmpfiles_cpumask

- name: Setup irqbalance conf
  lineinfile:
    path: /etc/sysconfig/irqbalance
    regexp: '^#?IRQBALANCE_BANNED_CPULIST=".*"$'
    line: 'IRQBALANCE_BANNED_CPULIST="{{ isolcpus }}"'
    state: present
  notify: Restart irqbalance
  when: isolcpus is defined
- name: Setup irqbalance conf revert
  lineinfile:
    path: /etc/sysconfig/irqbalance
    regexp: '^#?IRQBALANCE_BANNED_CPULIST=(.*)$'
    line: '#IRQBALANCE_BANNED_CPULIST=\1'
    state: present
    backrefs: yes
  notify: Restart irqbalance
  when: isolcpus is not defined

- name: Systemd conf RuntimeWatchdogSec
  lineinfile:
    path: /etc/systemd/system.conf
    regexp: '^RuntimeWatchdogSec=.*$'
    line: "RuntimeWatchdogSec=20"
    state: present
- name: Systemd conf RebootWatchdogSec
  lineinfile:
    path: /etc/systemd/system.conf
    regexp: '^RebootWatchdogSec=.*$'
    line: "RebootWatchdogSec=5min"
    state: present

- when:
    - cpusystem is defined
    - cpuuser is defined
    - cpumachines is defined
  block:
  - name: Create systemd slices override (folder)
    file:
      path: /etc/systemd/system.control/{{ item }}.slice.d
      state: directory
      owner: root
      group: root
      mode: 0755
    with_items:
      - "system"
      - "user"
      - "machine"
  - name: Create systemd slices override (files)
    template:
      src: systemd_slice_override.j2
      dest: /etc/systemd/system.control/{{ item.name }}.slice.d/50-AllowedCPUs.conf
      owner: root
      group: root
      mode:  0644
    with_items:
      - { name: "system", description: "system slice", allowedcpus: "{{ cpusystem }}" }
      - { name: "user", description: "user slice", allowedcpus: "{{ cpuuser }}" }
      - { name: "machine", description: "machine slice", allowedcpus: "{{ cpumachines }}" }

- name: Create systemd slices override REVERT
  file:
    path: /etc/systemd/system.control/{{ item }}.slice.d
    state: absent
  with_items:
    - "system"
    - "user"
    - "machine"
  when: cpusystem is not defined or cpuuser is not defined or cpumachines is not defined

- name: Create systemd slices
  template:
    src: systemd_slice.j2
    dest: /etc/systemd/system/{{ item.name }}.slice
    owner: root
    group: root
    mode:  0644
  with_items:
    - { name: "machine-rt", description: "VM rt slice", wants: "machine.slice", allowedcpus: "{{ cpumachinesrt }}" }
    - { name: "machine-nort", description: "VM nonrt slice", wants: "machine.slice", allowedcpus: "{{ cpumachinesnort }}" }
    - { name: "ovs", description: "ovs slice", wants: "", allowedcpus: "{{ cpuovs }}" }
  notify: Start new slices
  when:
    - cpumachinesrt is defined
    - cpumachinesnort is defined
    - cpuovs is defined
- name: Create systemd slices REVERT
  file:
    path: /etc/systemd/system/{{ item }}.slice
    state: absent
  with_items:
    - "machine-rt"
    - "machine-nort"
    - "ovs"
  notify: Start new slices REVERT
  when: cpumachinesrt is not defined and cpumachinesnort is not defined and cpuovs is not defined

- name: Make sure tuned package is installed
  ansible.builtin.dnf:
    name:
     - tuned
     - tuned-profiles-nfv
     - tuned-profiles-realtime
    state: present

- name: Remove old isolation files
  file:
    state: absent
    path: "{{ item }}"
  with_items:
    - /etc/sysfs.d/00-workqueue_cpumask.conf
    - /etc/systemd/system/kthread-taskset.service
    - /usr/local/bin/taskset_boot.sh
    - /etc/systemd/system/multi-user.target.wants/kthread-taskset.service
    - /etc/sysctl.d/00-schedrt.conf
    - /etc/default/grub.d/10-isolcpus.cfg

- name: Create tuned seapath-rt profile folder
  file:
    path: /etc/tuned/seapath-rt-host
    state: directory
    mode: '0755'

- name: Copy seapath-rt-host tuned profile conf
  template:
    src: tuned.conf.j2
    dest: /etc/tuned/seapath-rt-host/tuned.conf
    group: root
    owner: root
    mode: '0644'

- name: Remove tuned dynamic tuning
  lineinfile:
    path: /etc/tuned/tuned-main.conf
    state: present
    regexp: '^#?dynamic_tuning = .*$'
    line: 'dynamic_tuning = 0'

- name: Enable tuned.service
  ansible.builtin.systemd:
    name: tuned.service
    enabled: yes
    state: restarted

- name: Load seapath-rt-host tuned profile
  ansible.builtin.command: tuned-adm profile seapath-rt-host
  when: isolcpus is defined
  changed_when: true

- name: Unload tuned profile
  ansible.builtin.command: tuned-adm off
  when: isolcpus is not defined
  changed_when: true

- name: Enable libvirtd.service
  ansible.builtin.systemd:
    name: libvirtd.service
    enabled: yes
    state: started

- name: Create system alternative for a debian kvm path
  community.general.alternatives:
    name: "debian kvm"
    path: "/usr/libexec/qemu-kvm"
    link: "/usr/bin/qemu-system-x86_64"
