# Copy from ceph-ansible/group_vars/clients.yml.sample
# SPDX-License-Identifier: Apache-2.0

---
# Variables here are applicable to all host groups NOT roles

# This sample file generated by generate_group_vars_sample.sh

###########
# GENERAL #
###########

# Even though Client nodes should not have the admin key
# at their disposal, some people might want to have it
# distributed on Client nodes. Setting 'copy_admin_key' to 'true'
# will copy the admin key to the /etc/ceph/ directory
#copy_admin_key: false

user_config: true
# When pg_autoscale_mode is set to True, you must add the target_size_ratio key with a correct value
# `pg_num` and `pgp_num` keys will be ignored, even if specified.
# eg:
#  test:
#    name: "test"
#    application: "rbd"
#    target_size_ratio: 0.2
rbd:
  name: "rbd"
  application: "rbd"
  pg_autoscale_mode: off
#options not defaulting to ceph_conf_overrides ??
  pg_num: 128
  pgp_num: 128
  type: replicated
  #  target_size_ratio: 0.5
#test2:
#  name: "test2"
#  application: "rbd"
pools:
  - "{{ rbd }}"
#  - "{{ test2 }}"

# Generate a keyring using ceph-authtool CLI or python.
# Eg:
#  $ ceph-authtool --gen-print-key
#  or
#  $ python2 -c "import os ; import struct ; import time; import base64 ; key = os.urandom(16) ; header = struct.pack('<hiih',1,int(time.time()),0,len(key)) ; print(base64.b64encode(header + key))"
#
# To use a particular secret, you have to add 'key' to the dict below, so something like:
# - { name: client.test, key: "AQAin8tUMICVFBAALRHNrV0Z4MXupRw4v9JQ6Q==" ...

keys:
  - { name: client.libvirt, caps: { mon: 'profile rbd, allow command "osd blacklist"', osd: "allow class-read object_prefix rbd_children, profile rbd pool=rbd" },  mode: "{{ ceph_keyring_permissions }}" }
#  - { name: client.test2, caps: { mon: "profile rbd", osd: "allow class-read object_prefix rbd_children, profile rbd pool=test2" },  mode: "{{ ceph_keyring_permissions }}" }

