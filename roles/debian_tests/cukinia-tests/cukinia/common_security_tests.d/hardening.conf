# Copyright (C) 2021, RTE (http://www.rte-france.com)
# SPDX-License-Identifier: Apache-2.0

cukinia_log "$(_colorize yellow "--- Security hardening tests ---")"

# Check that root password was randomized at boot
test_id "SEAPATH-00088" as "root password was randomized at boot" cukinia_test \
    "$(systemctl show -p ExecMainStatus --value random-root-passwd.service)" -eq "0"

# Check that root password is randomized at each boot
test_id "SEAPATH-00089" as "root password is randomized at each boot" \
    cukinia_cmd systemctl --quiet is-enabled random-root-passwd.service

# Check that root password is encrypted with a cryto at least equivalent as
# sha512. See man 5 crypt
test_id "SEAPATH-00091" as "root password is encrypted with a cryto at least equivalent as sha512" \
    cukinia_cmd grep -Eq 'root:\$[6,y,gy,7,2b]\$' /etc/shadow

# Check that bash timeout variable is read-only and set to 300s
test_id "SEAPATH-00092" as "bash timeout is set read-only to 300s" cukinia_test \
    $(bash -l -c 'readonly -p' | grep -F 'TMOUT="300"' | wc -l) -eq 1

# Check that sshd forbids setting environment variables
test_id "SEAPATH-00093" as "sshd forbids setting environment variables" \
    cukinia_test "$(sshd -T |grep permituserenvironment)" = 'permituserenvironment no'

# Check that sshd timeout is set to 300s
sshd -T | grep -q 'clientaliveinterval 300' && \
sshd -T | grep -q 'clientalivecountmax 0'
test_id "SEAPATH-00094" as "sshd server time-out is set to 300s of client inactivity" \
    cukinia_test $? -eq 0

# Check that pam password authentication module uses sha512 with 65536 rounds
test_id "SEAPATH-00097" as "pam password authentication uses sha512 with 65536 rounds or yescrypt" \
    cukinia_cmd grep -Eq 'password\.\*sha512\.\*rounds=65536|yescrypt' /etc/pam.d/common-password

# Check that passwords are configured to expire after 90 days
test_id "SEAPATH-00098" as "password set to expire after 90 days" \
    cukinia_cmd grep -q 'PASS_MAX_DAYS.*90' /etc/login.defs

# Check that usage of 'su' is blocked
test_id "SEAPATH-00099" as "'su' is denied" not cukinia_cmd su -c "echo this should not be printed"

# Check that securetty is empty AND the PAM module is used
# in the configuration, blocking 'root' local login
test_id "SEAPATH-00100" as "/etc/securetty is empty" not cukinia_test -s /etc/securetty
test_id "SEAPATH-00101" as "PAM securetty module is active in 'login' policy" \
    cukinia_cmd grep -qE "^[^#].*pam_securetty.so" /etc/pam.d/login

# Check that bootloader is password protected with a superuser "root" & one
# unrestricted boot menuentry
test_id "SEAPATH-00202" as "grub root superuser is set in /boot/grub/grub.cfg" \
	cukinia_cmd grep -q "^superusers=root$" /boot/grub/grub.cfg
test_id "SEAPATH-00203" as "grub root superuser is password protected" \
	cukinia_cmd grep -q "^password_pbkdf2 root grub.pbkdf2.sha512.65536.*$" /boot/grub/grub.cfg
test_id "SEAPATH-00204" as "main menuentry is unrestricted in /boot/grub/grub.cfg" \
	cukinia_cmd grep -q "^menuentry.*--unrestricted" /boot/grub/grub.cfg

# Check that $USER have a private $TMPDIR
test_id "SEAPATH-00205" as "TMPDIR env var is defined and readonly" cukinia_test \
	$(bash -l -c 'readonly -p' | grep -E 'TMPDIR=*' | wc -l) -eq 1

test_id "SEAPATH-00206" as "TMPDIR is set with 700 mode and $USER as owner and group" cukinia_test\
	"$(bash -l -c 'stat $TMPDIR -c "%a %U %G"')" = "700 $USER $USER"

test_id "SEAPATH-00225" as "Umask is set correctly set" \
  cukinia_test "$(sh -c 'umask')" = "0027"

test_id "SEAPATH-00227" as "AppArmor processes are confined in enforce mode" \
  cukinia_test aa-status | grep "0 processes are unconfined"
