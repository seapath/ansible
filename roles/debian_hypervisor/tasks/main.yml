# Copyright (C) 2024 RTE
# SPDX-License-Identifier: Apache-2.0

---
- name: Add vhost_vsock to /etc/modules
  lineinfile:
    path: /etc/modules
    state: present
    regexp: '^vhost_vsock$'
    line: 'vhost_vsock'

- name: Add sriov driver to /etc/modules
  lineinfile:
    path: /etc/modules
    state: present
    regexp: "^{{ sriov_driver }}$"
    line: "{{ sriov_driver }}"
  when: sriov_driver is defined
- name: Add sriov apparmor permission for libvirt
  lineinfile:
    path: /etc/apparmor.d/local/abstractions/libvirt-qemu
    state: present
    line: '/dev/vfio/* rw,'
    create: yes
    mode: 0644
  when: sriov_driver is defined
- name: Load the sriov module
  community.general.modprobe:
    name: "{{ sriov_driver }}"
    state: present
  when: sriov_driver is defined

- name: Add sriov sysfs rules
  ansible.builtin.lineinfile:
    path: "/etc/sysfs.d/sriov.conf"
    state: present
    regexp: "^class/net/{{ item.key }}/device/sriov_numvfs = "
    line: "class/net/{{ item.key }}/device/sriov_numvfs = {{ item.value }}"
    create: yes
    mode: 0644
  with_items: "{{ sriov | dict2items }}"
  when: sriov is defined
  notify: Restart sysfsutils

- name: Systemd conf RuntimeWatchdogSec
  lineinfile:
    path: /etc/systemd/system.conf
    regexp: '^RuntimeWatchdogSec=.*$'
    line: "RuntimeWatchdogSec=20"
    state: present
- name: Systemd conf RebootWatchdogSec
  lineinfile:
    path: /etc/systemd/system.conf
    regexp: '^RebootWatchdogSec=.*$'
    line: "RebootWatchdogSec=5min"
    state: present

- when:
    - cpusystem is defined
    - cpuuser is defined
    - cpumachines is defined
  block:
  - name: Create systemd slices override (folder)
    file:
      path: /etc/systemd/system.control/{{ item }}.slice.d
      state: directory
      owner: root
      group: root
      mode: 0755
    with_items:
      - "system"
      - "user"
      - "machine"
  - name: Create systemd slices override (files)
    template:
      src: systemd_slice_override.j2
      dest: /etc/systemd/system.control/{{ item.name }}.slice.d/50-AllowedCPUs.conf
      owner: root
      group: root
      mode:  0644
    with_items:
      - { name: "system", description: "system slice", allowedcpus: "{{ cpusystem }}" }
      - { name: "user", description: "user slice", allowedcpus: "{{ cpuuser }}" }
      - { name: "machine", description: "machine slice", allowedcpus: "{{ cpumachines }}" }
- name: Create systemd slices override REVERT
  file:
    path: /etc/systemd/system.control/{{ item }}.slice.d
    state: absent
  with_items:
    - "system"
    - "user"
    - "machine"
  when: cpusystem is not defined or cpuuser is not defined or cpumachines is not defined

- name: Create systemd slices
  template:
    src: systemd_slice.j2
    dest: /etc/systemd/system/{{ item.name }}.slice
    owner: root
    group: root
    mode:  0644
  with_items:
    - { name: "machine-rt", description: "VM rt slice", wants: "machine.slice", allowedcpus: "{{ cpumachinesrt }}" }
    - { name: "machine-nort", description: "VM nonrt slice", wants: "machine.slice", allowedcpus: "{{ cpumachinesnort }}" }
    - { name: "ovs", description: "ovs slice", wants: "", allowedcpus: "{{ cpuovs }}" }
  notify: Start new slices
  when:
    - cpumachinesrt is defined
    - cpumachinesnort is defined
    - cpuovs is defined
- name: Create systemd slices REVERT
  file:
    path: /etc/systemd/system/{{ item }}.slice
    state: absent
  with_items:
    - "machine-rt"
    - "machine-nort"
    - "ovs"
  notify: Start new slices REVERT
  when: cpumachinesrt is not defined and cpumachinesnort is not defined and cpuovs is not defined

- name: Get tuned version
  command: tuned --version
  register: tuned_version_output
  changed_when: false
  failed_when: tuned_version_output.rc != 0

- name: Extract tuned version number
  set_fact:
    tuned_version: "{{ tuned_version_output.stdout | regex_search('\\d+\\.\\d+', '\\0') | first }}"

- name: Determine tuned profile path
  set_fact:
    tuned_profile_path: "{{ '/etc/tuned/profiles/seapath-rt-host' if tuned_version is version('2.22', '>=') else '/etc/tuned/seapath-rt-host' }}"

- name: Create tuned seapath-rt profile folder
  file:
    path: "{{ tuned_profile_path }}"
    state: directory
    mode: '0755'

- name: Tuned path
  set_fact:
    tuned_path: "{{ custom_tuned_profile_path if custom_tuned_profile_path is defined else 'tuned.conf.j2' }}"

- name: Copy seapath-rt-host tuned profile conf
  template:
    src: "{{ tuned_path }}"
    dest: "{{ tuned_profile_path }}/tuned.conf"
    group: root
    owner: root
    mode: '0644'

- name: Remove tuned dynamic tuning
  lineinfile:
    path: /etc/tuned/tuned-main.conf
    state: present
    regexp: '^#?dynamic_tuning = .*$'
    line: 'dynamic_tuning = 0'

- name: Enable tuned.service
  ansible.builtin.systemd:
    name: tuned.service
    enabled: yes
    state: restarted

- name: Load seapath-rt-host tuned profile
  ansible.builtin.command: tuned-adm profile seapath-rt-host
  when: isolcpus is defined
  changed_when: true

- name: Unload tuned profile
  ansible.builtin.command: tuned-adm off
  when: isolcpus is not defined
  changed_when: true

- name: Ensure SHUTDOWN_TIMEOUT is set to 20 #for Standalone
  ansible.builtin.lineinfile:
    path: /etc/default/libvirt-guests
    regexp: '^#?SHUTDOWN_TIMEOUT=.*'
    line: 'SHUTDOWN_TIMEOUT=20'
