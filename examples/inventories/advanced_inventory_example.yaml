# Copyright (C) 2020, RTE (http://www.rte-france.com)
# SPDX-License-Identifier: Apache-2.0

# Ansible inventory example containing a description of the variables used.
# This inventory is there to illustrate the variables and cannot be used
# directly.

---
all:
  children:
    cluster_machines:
      children:
        hypervisors:
          hosts:
            votp1:
              # Change IP address according to your setup
              ansible_host: 192.168.217.15
              # The network interface that will be used by the hypervisor to
              # communicate across the network
              network_interface: enp66s0f1
              # The IP address to be set to enbridge0. Don't forget to change
              # ansible host if this IP doesn't match with the one define in
              # ansible_host
              ip_addr: "{{ ansible_host }}"
              # Gateway IP Addr. The variable must be define but
              # can be empty
              gateway_addr: 192.168.217.1
              # The Subnetwork. Optional variable, default is 24
              subnet: 16
              # The smart plug port associated to the machine
              plug_port: 4
              # Optional additional network configuration list
              # For more information see roles/systemd_networkd/README.md
              # Set the cluster interface
              cluster_interface: "ens0p2"
              # Set the cluster IP address
              cluster_ip_addr: "10.0.27.2"
              custom_network:
                # Arbitrary list name. Must begin with 00-
                00-br0ExternalPort:
                  - Match:
                      # The name of the interface to configure
                      - Name: "br0ExternalPort"
                  - Network:
                      # The interface IP address with it
                      # subnetwork
                      - Address: "10.0.24.3/24"
                00-cluster:
                  - Match:
                      - Name: "{{ cluster_interface }}"
                  - Network:
                      - Address: "{{ cluster_ip_addr }}/24"

            votp2:
              ansible_host: 192.168.217.16
              network_interface: br1
              dns_server: 9.9.9.9
              ip_addr: 192.168.217.16
              gateway_addr: 192.168.217.1
              # Number of hugepages to reserve. Optional default is 4
              kernel_parameters_hugepages: 3
              # Optional variable to append extra kernel parameters. Use it to
              # add vfio_iommu_type1.allow_unsafe_interrupts=1 for old machines
              # like HP Z800
              extra_kernel_parameters: >-
                vfio_iommu_type1.allow_unsafe_interrupts=1
              # Bootloader configuration file. Must be set to
              # /boot/syslinux.cfg on BIOS machine. Default is
              # /boot/EFI/BOOT/grub.cfg used by UEFI machines.
              bootloader_config_file: /boot/syslinux.cfg


          # hypervisors groupe variables
          vars:
            # Set true to restart after setting kernel parameters (default is
            # false)
            kernel_parameters_restart: true
            # OVS bridges and ports description.
            # See OVS_configuration.adoc for more details.
            # Declared here, bridges configuration is the same for all
            # hypervisors. Ansible variables can be used to select hypervisor
            # specific settings like NIC PCI addresses or network interfaces.
            ovs_bridges:
              # Bridge interface name
              - name: br0
                # Bridge's ports list
                ports:
                  # Port interace name
                  - name: br0P0
                    # Port type dpdkvhostuserclient is a port to connect VM with
                    # DPDK support
                    type: dpdkvhostuserclient
                    # VLAN ID
                    tag: 4
                  - name: br0P1
                    type: dpdkvhostuserclient
                    tag: 4
                  - name: br0P2
                    type: dpdkvhostuserclient
                    tag: 4
                  - name: br0P3
                    type: dpdkvhostuserclient
                    tag: 4
                  - name: br0P4
                    type: dpdkvhostuserclient
                  - name: br0Host
                    # Create an internal for host connection
                    type: internal
                    tag: 4
                  - name: br0External
                    # Attach an network interface using DPDK
                    type: dpdk
                    # With type dpdk you need to set the NIC interface PCI
                    # address. This address is hardware dependend to we use an
                    # Ansible variable to set this address in each hypervisor
                    # machine.
                    interface: "{{ dpdk_nic }}"
                    tag: 4
              - name: br1
                ports:
                  - name: br1P0
                    # Use type "internal" to attach an OVS port in a VM without
                    # using DPDK
                    type: internal
                    # You can set a port VLAN trunks
                    trunks:
                      - 300
                      - 301
                  - name: br1P1
                    type: internal
                    tag: 300
                    # VLAN mode can be set in each port configuration
                    vlan_mode: native-untagged
                  - name: br1External
                    # Attach a network interface without using DPDK
                    type: system
                    # The interface to attach
                    interface: eno1

        observers:
          hosts:
            observer:
              ansible_host: 192.168.217.11
              # The network interface to configure
              network_interface: enp0s2
              dns_server: 9.9.9.9
              ip_addr: 192.168.217.11
              gateway_addr: 192.168.1.254
              subnet: 24
    # Ceph Monitor group where a Ceph monitor will be installed
    mons:
      hosts:
        votp1:
        votp2:
        observer:
    # Ceph OSD group where a Ceph OSD will be installed
    osds:
      hosts:
        votp1:
        votp2:
      vars:
        # Disk to use for Ceph OSD
        ceph_osd_disk: /dev/sdb
    # Ceph clients group where ceph will be used
    clients:
      hosts:
        votp1:
        votp2:
    pxe_machines:
      hosts:
        pxe_votp1:
          ansible_host: 192.168.217.111
          static_ip: 192.168.217.15
        pxe_votp2:
          ansible_host: 192.168.217.112
          static_ip: 192.168.217.16
        pxe_observer:
          ansible_host: 192.168.217.113
          static_ip: 192.168.217.11
      vars:
        image_path: "/tmp/seapath-bios-dbg-image-votp.wic.gz"
        root_disk: "/dev/vda"
        network_interface: "eth0"

  vars:
    # Use Ansible through SSH
    ansible_connection: ssh
    # Ansible use root account on target
    ansible_user: root
    # Use python3
    ansible_python_interpreter: /usr/bin/python3
    # Set this optional variable to true if we want to apply the network
    # configuration. Otherwise the network configuration will be apply during
    # the next reboot
    apply_network_config: true
    # NTP server to use
    ntp_servers: 192.168.217.1
    # NTP failback servers. Optional variable
    fallback_ntp_servers: >-
      0.fr.pool.ntp.org
      1.fr.pool.ntp.org
      2.fr.pool.ntp.org
      3.fr.pool.ntp.org
    # DNS server ip. The variable must be defined but can be empty.
    dns_server: 9.9.9.9
    # Ceph public network
    ceph_public_network: "192.168.217.0/24"
    # Ceph internal cluster network. It can be the same as public network or a
    # specific one
    ceph_cluster_network: "192.168.217.0/24"
    # The Ceph monitor intial IP address. Usaly the public IP address our the
    # cluster IP address.
    monitor_address: "{{ ansible_host }}"
    # The DHCP plage used by the PXE
    dhcp_range_begin: "192.168.111.50"
    dhcp_range_end: "192.168.111.100"
    # The network interace to bind with the PXE
    dhcp_bind_interface: "eth0"
    # The PXE ip address asigned to the "dhcp_bind_interface" interface
    pxe_server_address: "192.168.111.1"
    # Change the Ansible working folder to a rw accessible folder
    ansible_remote_tmp: /tmp/.ansible/tmp
    # The syslog server IP address where logs are centralized
    syslog_server_ip: "192.168.220.6"
    # The password hash generated with "grub-mkpasswd-pbkdf2 -c 65536 -s 256 -l 64", in this example the pass is "toto"
    grub_password: grub.pbkdf2.sha512.65536.E291D66AEEB3C22BD6B019C5C3587A3094AE93D61E20D134EC6324925AE5045DCA61EF30B3BD04B4D6F7360B9C9B242AA68B1643CCB269C53658EC959B5964ADB9C9D5FAA280A291D8F95E3F255254A4119A2431AFE797F1949EE4FBBC4C74281C550C83DAED26C254224061BEFCEEBF8091A8D1BE406EBB3A3E8A519E36B4FE161BE191D407193E5DFEBCC09F8822B4060EA9CD1E6B8677D40D32826EF025CA494BCD209032F7CF2A4A2E74717E6D17E87A62AAA93E458C96F983E69FBFC4FD602403988EAF5AADCA4B5B145B0F6C6FFB53F55CD6C56C15C17B2F8A5B3A214F3140470566597760D9388084AE978DB5C0EBF7C868A855DB38DACA47A010417A.FDA0C3188FAC87FFA04D862AC9B1020F29FEEA3B9590BE534330D8C7CAB71444CBF527E39D7DAE640545139202B9CA77822CCE21AB1134110F6AF3EFD793E848
