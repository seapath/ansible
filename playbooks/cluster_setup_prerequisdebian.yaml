- name: Configure debian prerequisites
  hosts:
      cluster_machines
  tasks:
    - name: create src folder on hosts
      file:
        path: /tmp/src
        state: directory
        mode: '0755'

    - name: Synchronization of src python3-setup-ovs on the control machine to dest on the remote hosts
      ansible.posix.synchronize:
        src: ../src/debian/python3-setup-ovs
        dest: /tmp/src
    - name: Install python3-setup-ovs
      command:
        cmd: /usr/bin/python3 setup.py install
        chdir: /tmp/src/python3-setup-ovs
    - name: Copy votp-config_ovs.service
      ansible.builtin.copy:
        src: ../src/debian/votp-config_ovs.service
        dest: /etc/systemd/system/votp-config_ovs.service
        mode: '0644'
      register: votpconfigovs
    - name: Copy votp-taskset.service script
      ansible.builtin.copy:
        src: ../src/debian/taskset_boot.sh
        dest: /usr/local/bin/taskset_boot.sh
        mode: '0755'
      register: votptaskset1
    - name: Copy votp-taskset.service
      ansible.builtin.copy:
        src: ../src/debian/votp-taskset.service
        dest: /etc/systemd/system/votp-taskset.service
        mode: '0644'
      register: votptaskset2
    - name: daemon-reload
      ansible.builtin.service:
        daemon_reload: yes
      when: votpconfigovs.changed or votptaskset1.changed or votptaskset2.changed
    - name: enable votp-config_ovs.service
      ansible.builtin.systemd:
        name: votp-config_ovs.service
        enabled: yes
    - name: enable votp-taskset.service
      ansible.builtin.systemd:
        name: votp-taskset.service
        enabled: yes

    - name: Synchronization of src vm_manager on the control machine to dest on the remote hosts
      ansible.posix.synchronize:
        src: ../src/debian/vm_manager
        dest: /tmp/src
    - name: Install vm_manager
      command:
        cmd: /usr/bin/python3 setup.py install
        chdir: /tmp/src/vm_manager
    - name: Create a symbolic link
      ansible.builtin.file:
        src: /usr/local/bin/vm_manager_cmd.py
        dest: /usr/local/bin/vm-mgr
        state: link

    - name: Synchronization of backup-restore folder on the control machine to dest on the remote hosts
      ansible.posix.synchronize:
        src: ../src/debian/backup-restore/
        dest: /usr/bin/

    - name: Copy consolevm.sh
      ansible.builtin.copy:
        src: ../src/debian/consolevm.sh
        dest: /usr/local/bin/consolevm
        mode: '0755'

    - name: Copy vimrc.local file
      ansible.builtin.copy:
        src: ../src/debian/vimrc.local
        dest: /etc/vim/vimrc.local
        mode: '0644'

    - name: Copy VirtualDomain file
      ansible.builtin.copy:
        src: ../src/debian/VirtualDomain
        dest: /usr/lib/ocf/resource.d/heartbeat/VirtualDomain
        mode: '0755'

    - name: create /var/log/syslog-ng folder on hosts
      file:
        path: /var/log/syslog-ng
        state: directory
        mode: '0755'
    - name: Copy syslog-ng conf file
      template:
        src: ../templates/syslog-ng.conf.j2
        dest: /etc/syslog-ng/syslog-ng.conf
        mode: '0644'
      register: syslogconf
    - name: Restart syslog-ng
      ansible.builtin.systemd:
        state: restarted
        name: syslog-ng
      when: syslogconf.changed

    - name: Create libvirtd.service.d directory
      file:
        path: /etc/systemd/system/libvirtd.service.d/
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: Copy libvirtd.service drop-in
      ansible.builtin.copy:
        src: ../src/debian/libvirtd_override.conf
        dest: /etc/systemd/system/libvirtd.service.d/override.conf
        owner: root
        group: root
        mode: 0644
      notify: daemon-reload
    - name: Create pacemaker.service.d directory
      file:
        path: /etc/systemd/system/pacemaker.service.d/
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: Copy pacemaker.service drop-in
      ansible.builtin.copy:
        src: ../src/debian/pacemaker_override.conf
        dest: /etc/systemd/system/pacemaker.service.d/override.conf
        owner: root
        group: root
        mode: 0644
      notify: daemon-reload
      register: pacemaker_corosync
    - name: Get Pacemaker service Status
      ansible.builtin.systemd:
        name: "pacemaker.service"
      register: pacemaker_service_status
    - name: disable pacemaker (reinstall step 1/2)
      ansible.builtin.systemd:
        name: pacemaker.service
        enabled: no
      when: pacemaker_corosync.changed and pacemaker_service_status.status.UnitFileState == "enabled"
    - name: enable pacemaker (reinstall step 2/2)
      ansible.builtin.systemd:
        name: pacemaker.service
        enabled: yes
      when: pacemaker_corosync.changed and pacemaker_service_status.status.UnitFileState == "enabled"

    - name: Synchronization of snmp_ scripts
      ansible.posix.synchronize:
        src: ../src/debian/
        dest: /usr/local/bin/
        rsync_opts:
        - "--include=snmp_*.sh"
        - "--include=virt-df.sh"
        - "--exclude=*"
        - "--chmod=F755"
    - name: Snmp config
      ansible.builtin.copy:
        src: ../src/debian/snmpd.conf
        dest: /etc/snmp/snmpd.conf
        mode: '0644'
      register: snmpd_conf
    - name: restart snmpd
      ansible.builtin.systemd:
        name: snmpd.service
        state: restarted
      when: snmpd_conf.changed
    - name: Adding user Debian-snmp to groups libvirt and haclient
      user: name=Debian-snmp
        group=Debian-snmp
        shell=/bin/false
        groups=libvirt,haclient
        append=yes

    - name: Allow 'Debian-snmp' user to run snmp_diskusag
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^Debian-snmp'
        line: 'Debian-snmp     ALL = (root) NOPASSWD: /usr/local/bin/snmp_diskusage.sh'
        validate: visudo -cf %s
    - name: Copy journald conf file
      ansible.builtin.copy:
        src: ../src/debian/journald.conf
        dest: /etc/systemd/journald.conf
        mode: '0644'
      register: journaldconf
    - name: Restart systemd-journald
      ansible.builtin.systemd:
        state: restarted
        name: systemd-journald
      when: journaldconf.changed

    - name: Adding user virtu to groups libvirt and haclient
      user: name=virtu
        group=virtu
        shell=/bin/bash
        groups=libvirt,haclient
        append=yes

    - name: Copy sysctl rules
      ansible.builtin.copy:
        src: ../src/debian/{{ item }}
        dest: /etc/sysctl.d/{{ item }}
        mode: '0644'
      with_items:
        - 00-bridge_nf_call.conf
        - 00-schedrt.conf
        - 00-panicreboot.conf
    - name: add br_netfilter to /etc/modules
      lineinfile:
        dest: /etc/modules
        state: present
        regexp: '^br_netfilter$'
        line: 'br_netfilter'

    - name: Copy apparmor libvirt-qemu rules
      ansible.builtin.copy:
        src: ../src/debian/etc_apparmor.d_abstractions_libvirt-qemu.conf
        dest: /etc/apparmor.d/abstractions/libvirt-qemu
        mode: '0644'

    - name: Copy sysfs.d cpumask
      template:
        src: ../templates/00-workqueue_cpumask.conf.j2
        dest: /etc/sysfs.d/00-workqueue_cpumask.conf
        mode: '0644'
      register: sysfscpumask
    - name: restart sysfsutils
      ansible.builtin.systemd:
        name: sysfsutils.service
        state: restarted
      when: sysfscpumask.changed

    - name: Copy 80-wired networkd file
      ansible.builtin.copy:
        src: ../src/debian/80-wired.network
        dest: /etc/systemd/network/80-wired.network
        mode: '0640'
        owner: root
        group: systemd-network

    - name: Copy metricbeat conf file
      ansible.builtin.copy:
        src: ../src/debian/metricbeat.yml
        dest: /etc/metricbeat/metricbeat.yml
        mode: '0644'
    - name: enable metricbeat
      ansible.builtin.systemd:
        name: metricbeat.service
        enabled: yes
        state: started

    - name: "grub conf"
      lineinfile:
        dest: /etc/default/grub
        regexp: '^GRUB_CMDLINE_LINUX_DEFAULT=".*"$'
        line: 'GRUB_CMDLINE_LINUX_DEFAULT="ipv6.disable=1 efi=runtime processor.max_cstate=1 intel_idle.max_cstate=1 cpufreq.default_governor=performance default_hugepagesz=1G hugepagesz=1G audit=off no_debug_objects intel_pstate=disable nosoftlockup tsc=nowatchdog"'
        state: present
      register: updategrub
    - name: update-grub
      shell: update-grub
      when: updategrub.changed

    - name: "irqbalance conf"
      lineinfile:
        dest: /etc/default/irqbalance
        regexp: '^IRQBALANCE_BANNED_CPUS=".*"$'
        line: 'IRQBALANCE_BANNED_CPUS="{{ irqmask }}"'
        state: present
      register: irqbalanceconf
    - name: restart irqbalance
      ansible.builtin.systemd:
        name: irqbalance.service
        enabled: yes
        state: restarted
      when: irqbalanceconf.changed

    - name: Copy hugetlb script file
      ansible.builtin.copy:
        src: ../src/debian/hugetlb-reserve-pages.sh
        dest: /usr/local/bin/hugetlb-reserve-pages.sh
        mode: '0755'
    - name: Copy hugetlb service file
      ansible.builtin.copy:
        src: ../src/debian/hugetlb-gigantic-pages.service
        dest: /etc/systemd/system/hugetlb-gigantic-pages.service
        mode: '0644'
    - name: daemon-reload
      ansible.builtin.service:
        daemon_reload: yes
    - name: enable hugetlb-gigantic-pages.service
      ansible.builtin.systemd:
        name: hugetlb-gigantic-pages.service
        enabled: yes
        state: started

    - name: customize /etc/environment
      ansible.builtin.lineinfile:
        dest: "/etc/environment"
        state: present
        regexp: "^{{ item.key }}="
        line: "{{ item.key }}={{ item.value }}"
      vars:
        env_list:
          HISTSIZE: 2000000
          HISTFILESIZE: 2000000
          LIBVIRT_DEFAULT_URI: "qemu:///system"
      with_items: "{{ env_list | dict2items }}"

    - name: "systemd conf"
      lineinfile:
        dest: /etc/systemd/system.conf
        regexp: '^CPUAffinity=.*$'
        line: "CPUAffinity={{ cpusystem }}"
        state: present

    - name: "PATH for virtu user"
      lineinfile:
        dest: /home/virtu/.bash_profile
        regexp: '^export PATH'
        line: "export PATH=$PATH:/usr/sbin:/usr/local/sbin:/sbin"
        state: present
        create: yes
        owner: virtu
        group: virtu
        mode: '0644'


    - name: Create systemd slices override
      file:
        path: /etc/systemd/system.control/{{ item }}.slice.d
        state: directory
        owner: root
        group: root
        mode: 0755
      with_items:
        - "system"
        - "user"
        - "machine"
    - name: create systemd slices override
      template:
        src: ../templates/systemd_slice_override.j2
        dest: /etc/systemd/system.control/{{ item.name }}.slice.d/50-AllowedCPUs.conf
        owner: root
        group: root
        mode:  0644
      with_items:
        - { name: "system", description: "system slice", allowedcpus: "{{ cpusystem }}" }
        - { name: "user", description: "user slice", allowedcpus: "{{ cpuuser }}" }
        - { name: "machine", description: "machine slice", allowedcpus: "{{ cpumachines }}" }
 
    - name: create systemd slices
      template:
        src: ../templates/systemd_slice.j2
        dest: /etc/systemd/system/{{ item.name }}.slice
        owner: root
        group: root
        mode:  0644
      with_items:
        - { name: "machine-rt", description: "VM rt slice", wants: "machine.slice", allowedcpus: "{{ cpumachinesrt }}" }
        - { name: "machine-nort", description: "VM nonrt slice", wants: "machine.slice", allowedcpus: "{{ cpumachinesnort }}" }
        - { name: "ovs", description: "ovs slice", wants: "", allowedcpus: "{{ cpuovs }}" }
      register: newslices

    - name: start new slices
      ansible.builtin.systemd:
        name: "{{ item }}.slice"
        state: restarted
        daemon_reload: yes
      with_items:
        - "machine-rt"
        - "machine-nort"
        - "ovs"
      when: newslices.changed

    - name: Create ovs-vswitchd.service.d directory
      file:
        path: /etc/systemd/system/ovs-vswitchd.service.d/
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: Copy ovs-vswitchd.service drop-in
      ansible.builtin.copy:
        src: ../src/debian/ovs-vswitchd_override.conf
        dest: /etc/systemd/system/ovs-vswitchd.service.d/override.conf
        owner: root
        group: root
        mode: 0644
      register: ovsvswitchd
    - name: Restart ovs-vswitchd
      ansible.builtin.systemd:
        state: restarted
        daemon_reload: yes
        name: ovs-vswitchd
      when: ovsvswitchd.changed

    - name: lineinfile in hosts file for logstash_seapath
      lineinfile:
        dest: /etc/hosts
        line: "{{ logstash_server_ip }} logstash_seapath"
        state: present


  handlers:
    - name: daemon-reload
      ansible.builtin.service:
        daemon_reload: yes
