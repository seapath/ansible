# Copyright (C) 2024 Savoir-faire Linux, Inc.
# SPDX-License-Identifier: Apache-2.0

---
- name: Gather facts
  hosts:
    - publisher_machine
    - VMs
    - yoctoCI-aaeon
  tasks:
    - name: Gather ansible_user_dir fact
      setup:
        filter: ansible_user_dir

- name: Copy docker tar image
  hosts:
      - publisher_machine
      - VMs
      - yoctoCI-aaeon
  tasks:
      - name: "Create latency_tests directory if it doesn't exist"
        ansible.builtin.file:
          path: "{{ ansible_user_dir }}/latency_tests/"
          state: directory
          mode: '0777'
      - name: "Copy archive"
        ansible.builtin.copy:
          src: "../ci_latency_tests/build/{{ sv_timestamp_logger_image }}"
          dest: "{{ ansible_user_dir }}/latency_tests/sv_timestamp_logger.tar"

- name: Synchronise machines with PTP
  become: true
  vars:
    phc_delay: "-37"
  hosts:
      - publisher_machine
  tasks:
    - name: Copy ptp4l.service
      ansible.builtin.template:
        src: "{{ (playbook_dir | dirname) }}/templates/ptp4l.service.j2"
        dest: /etc/systemd/system/ptp4l.service

    - name: Copy ptp4l.conf
      ansible.builtin.template:
        src: "{{ (playbook_dir | dirname) }}/templates/ptp4l.conf.j2"
        dest: /etc/linuxptp/ptp4l.conf

    - name: Enable ptp4l.service
      ansible.builtin.systemd:
        name: ptp4l
        enabled: true
        daemon-reload: true
        state: restarted

    - name: Send phc2sys.service
      ansible.builtin.template:
        src: "{{ (playbook_dir | dirname) }}/templates/phc2sys.service.j2"
        dest: /etc/systemd/system/phc2sys.service

    - name: Enable phc2sys.service
      ansible.builtin.systemd:
        name: phc2sys
        enabled: true
        daemon-reload: true
        state: restarted

- name: Launch sv timestamp logger on publisher
  hosts: publisher_machine
  become: true
  tasks:
    - name: Load Docker archive
      ansible.builtin.command: "docker image load -i {{ ansible_user_dir }}/latency_tests/sv_timestamp_logger.tar"
      changed_when: true

    - name: Launch sv timestamp logger
      ansible.builtin.command: >-
        docker run
        --rm
        --name sv_timestamp_logger
        -d
        --network host
        -v {{ ansible_user_dir }}/latency_tests:/tmp/latency_tests
        --cap-add=NET_ADMIN
        --cap-add=SYS_NICE
        sv_timestamp_logger
        -d {{ sv_interface }}
        -f "/tmp/latency_tests/ts_{{ inventory_hostname }}.txt"
        -t
        -s svID0000
      changed_when: true

- name: Launch sv timestamp logger on VMs and docker hosts
  hosts:
    - VMs
    - yoctoCI-aaeon
  become: true
  tasks:
    - name: Load Docker archive
      ansible.builtin.command: "docker image load -i {{ ansible_user_dir }}/latency_tests/sv_timestamp_logger.tar"
      changed_when: true

    - name: Launch sv timestamp logger
      ansible.builtin.command: >-
        docker run
        --name sv_timestamp_logger
        -d
        --rm
        --network host
        -v {{ ansible_user_dir }}/latency_tests:/tmp/latency_tests
        --cap-add=SYS_NICE
        sv_timestamp_logger
        -d {{ sv_interface }}
        -f "/tmp/latency_tests/ts_{{ inventory_hostname }}.txt"
        -s svID0000
      changed_when: true

- name: Launch pcap sending
  hosts: publisher_machine
  become: true
  tasks:
    - name: "Send pcap from publisher"
      ansible.builtin.command: >-
        {% if bittwist_cpu is defined %} taskset -c {{ bittwist_cpu }} {% endif %}
          bittwist
            -i {{ sv_interface }}
            -l {{ pcap_loop }}
            /seapath-ci/pcaps/{{ pcap_file }}
      register: cmd
      changed_when: true

- name: Fetch results
  become: true
  hosts:
      - VMs
      - publisher_machine
      - yoctoCI-aaeon
  tasks:
    - name: "Stop docker container"
      ansible.builtin.command: docker stop sv_timestamp_logger
      changed_when: true

    - name: "Copy results to ansible directory"
      ansible.posix.synchronize:
        src: "{{ ansible_user_dir }}/latency_tests/ts_{{ inventory_hostname }}.txt"
        dest: "../ci_latency_tests/results/"
        mode: pull
        rsync_path: rsync
