# Copyright (C) 2024 RTE
# SPDX-License-Identifier: Apache-2.0

---
- name: Populate service facts
  service_facts:

- name: Copy sysctl rules
  ansible.builtin.copy:
    src: "{{ item }}"
    dest: /etc/sysctl.d/{{ item }}
    mode: '0644'
  with_items:
    - 00-bridge_nf_call.conf
  notify: Restart systemd-sysctl

- name: Add sysctl conf from inventory (extra_sysctl_physical_machines)
  ansible.builtin.copy:
    dest: /etc/sysctl.d/00-seapathextra_physicalmachines.conf
    mode: '0644'
    content: "{{ extra_sysctl_physical_machines }}"
  when: extra_sysctl_physical_machines is defined
  notify: Restart systemd-sysctl

- name: Create src folder on hosts
  file:
    path: /tmp/src
    state: directory
    mode: '0755'

- name: Temp fix for synchronize to force evaluate variables
  set_fact:
    ansible_host: "{{ ansible_host }}"

- name: Deploy vm_manager
  include_role:
    name: deploy_vm_manager

- name: Deploy python3-setup-ovs
  include_role:
    name: deploy_python3_setup_ovs

- name: Create /usr/lib/ocf/resource.d/seapath on hosts
  file:
    path: /usr/lib/ocf/resource.d/seapath
    state: directory
    mode: '0755'

- name: Copy Pacemaker Seapath Resource-Agent files
  ansible.posix.synchronize:
    src: pacemaker_ra/
    dest: /usr/lib/ocf/resource.d/seapath/
    rsync_opts:
    - "--chmod=F755"
    - "--chown=root:root"
  when:
    - "'cluster_machines' in group_names"

- name: Copy chrony-wait.service
  template:
    src: chrony-wait.service.j2
    dest: /etc/systemd/system/chrony-wait.service
    owner: root
    group: root
    mode: '0644'
  register: chronywait
  notify: Trigger daemon-reload
- name: Enable chrony-wait.service
  ansible.builtin.systemd:
    name: chrony-wait.service
    enabled: yes

- when:
    - services['pacemaker.service'] is defined
  block:
    - name: Create pacemaker.service.d directory
      file:
        path: /etc/systemd/system/pacemaker.service.d/
        state: directory
        owner: root
        group: root
        mode: 0755
    - name: Copy pacemaker.service drop-in
      template:
        src: pacemaker_override.conf.j2
        dest: /etc/systemd/system/pacemaker.service.d/override.conf
        owner: root
        group: root
        mode: 0644
      notify: Trigger daemon-reload
      register: pacemaker_corosync
    - name: Get Pacemaker service Status
      ansible.builtin.systemd:
        name: "pacemaker.service"
      register: pacemaker_service_status
    - name: Disable pacemaker (reinstall step 1/2)
      ansible.builtin.systemd:
        name: pacemaker.service
        enabled: no
      when: pacemaker_corosync.changed and pacemaker_service_status.status.UnitFileState == "enabled"
    - name: Enable pacemaker (reinstall step 2/2)
      ansible.builtin.systemd:
        name: pacemaker.service
        enabled: yes
      when: pacemaker_corosync.changed and pacemaker_service_status.status.UnitFileState == "enabled"

- name: Add extra modules to the kernel
  lineinfile:
    dest: /etc/modules
    state: present
    regexp: "^{{ item }}$"
    line: "{{ item }}"
  with_items: "{{ extra_kernel_modules | default([]) }}"

- name: Add admin user to libvirt group
  user:
    name: "{{ admin_user }}"
    groups: libvirt
    append: yes

- name: Creating libvirt user with libvirtd permissions
  user:
    name: libvirt
    group: libvirt
    shell: /bin/false

- name: Add br_netfilter to /etc/modules-load.d
  ansible.builtin.copy:
    src: modules/netfilter.conf
    dest: /etc/modules-load.d/netfilter.conf
    owner: root
    group: root
    mode: 0751
- name: Add raid6_pq to /etc/modules-load.d
  ansible.builtin.copy:
    src: modules/raid6_pq.conf
    dest: /etc/modules-load.d/raid6_pq.conf
    owner: root
    group: root
    mode: 0751

- name: Lineinfile in hosts file for logstash-seapath
  lineinfile:
    dest: /etc/hosts
    regexp: '.* logstash-seapath$'
    line: "{{ logstash_server_ip }} logstash-seapath"
    state: present
  when: logstash_server_ip is defined

- name: Make libvirt use the "machine-id" way to determine host UUID
  lineinfile:
    dest: /etc/libvirt/libvirtd.conf
    regexp: "^#?host_uuid_source ="
    line: "host_uuid_source = \"machine-id\""
    state: present
- name: Restart libvirtd
  ansible.builtin.systemd:
    name: libvirtd.service
    state: restarted

- name: Add rbd type to lvm.conf
  ansible.builtin.lineinfile:
    path: /etc/lvm/lvm.conf
    insertafter: 'devices {'
    line: "        types = [ \"rbd\", 1024 ]"
    state: present
- name: Disable lvm use_devicesfile
  ansible.builtin.lineinfile:
    path: /etc/lvm/lvm.conf
    regexp: "^\\s*#?\\s*use_devicesfile\\s*=\\s*"
    line: "        use_devicesfile = 0"
    state: present

- name: Create a symbolic link for qemu-kvm/x86-64
  ansible.builtin.file:
    src: /usr/libexec/qemu-kvm
    dest: /usr/bin/qemu-system-x86_64
    state: link

- name: Enable and start virtsecretd.socket
  ansible.builtin.systemd:
    name: virtsecretd.socket
    state: started
    enabled: true
- name: Enable and start virtqemud.socket
  ansible.builtin.systemd:
    name: virtqemud.socket
    state: started
    enabled: true
- name: Enable and start virtstoraged.socket
  ansible.builtin.systemd:
    name: virtstoraged.socket
    state: started
    enabled: true

- name: Ensure group www-data exists with GID 1033
  group:
    name: www-data
    gid: 1033
    state: present

- name: Ensure user www-data exists with UID 1033 and GID 1033
  user:
    name: www-data
    uid: 1033
    group: www-data
    shell: /bin/bash
