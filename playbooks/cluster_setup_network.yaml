# Copyright (C) 2020, RTE (http://www.rte-france.com)
# SPDX-License-Identifier: Apache-2.0

# This Ansible playbook configures the networks and defines the hostnames. It
# can be used on cluster machines and VMs. It is called by the playbook
# cluster_setup_main.yaml, but can also be called independently, especially to
# configure VMs.

---
- name: configure cluster network
  hosts: cluster_machines
  become: true
  tasks:
    - name: Remove team0 bridge in OVS
      command: "/usr/bin/ovs-vsctl --if-exists del-br team0"
    - name: Create team0 bridge in OVS
      command: "/usr/bin/ovs-vsctl add-br team0"
    - name: Enable RSTP on team0 bridge
      command: "/usr/bin/ovs-vsctl set Bridge team0 rstp_enable=true"
    - name: Set RSTP priority on team0 bridge
      command: "/usr/bin/ovs-vsctl set Bridge team0 other_config=rstp-priority=16384"
    - name: Add interface team0_0 to team0 bridge
      command: "/usr/bin/ovs-vsctl -- --if-exists del-port {{ team0_0 }} -- add-port team0 {{ team0_0 }}"
    - name: Add interface team0_1 to team0 bridge
      command: "/usr/bin/ovs-vsctl -- --if-exists del-port {{ team0_1 }} -- add-port team0 {{ team0_1 }}"

- name: Configure OVS
  hosts: cluster_machines
  become: true
  vars:
    apply_config: "{{ apply_network_config | default(false) }}"
  tasks:
    - name: Create OVS configuration
      template:
        src: ../templates/ovs_configuration.json.j2
        dest: /etc/ovs_configuration.json
        validate: setup_ovs.py -v -c -f %s
      register: ovs_conf
    - name: Restart votp-config_ovs
      ansible.builtin.systemd:
        name: votp-config_ovs
        state: restarted
      when:
        - apply_config
        - ovs_conf.changed
    - name: Register reboot
      set_fact:
        need_reboot: true
      when:
        - not apply_config
        - ovs_conf.changed

- name: Configure Network
  become: true
  hosts: cluster_machines
  vars_files:
    - ../vars/network_vars.yml
  roles:
    - systemd_networkd

- name: Network configuration
  hosts: cluster_machines
  become: true
  vars:
    apply_config: "{{ apply_network_config | default(false) }}"
  tasks:
    - name: Restart systemd-networkd
      ansible.builtin.systemd:
        name: systemd-networkd
        state: restarted
      when:
        apply_config

- name: Configure hosts and hostname
  hosts: cluster_machines
  become: true
  tasks:
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"
        use: systemd
    - name: Build hosts file
      lineinfile:
        dest: /etc/hosts
        regexp: '.*{{ item }}(| rbd)$'
        line: "{{ hostvars[item].cluster_ip_addr }} {{item}}{% if item == inventory_hostname %} rbd{% endif %}"
        state: present
      when: hostvars[item].cluster_ip_addr is defined
      loop: "{{ groups['cluster_machines'] }}"
    - name: remove 'debian' from hosts file
      lineinfile:
        dest: /etc/hosts
        state: absent
        regexp: '^127.*debian'


- name: Configure NTP
  hosts: cluster_machines
  become: true
  tasks:
    - name: Set NTP configuration in /etc/systemd/timesyncd.conf
      lineinfile:
        dest: /etc/systemd/timesyncd.conf
        regexp: '{{ item.regexp }}'
        line: '{{ item.line   }}'
        insertafter: '\[Time\]'
        backrefs: true
        create: true
        state: present
      with_items:
        - regexp: '^\s*#?\s*(NTP=).*$'
          line: 'NTP={{ ntp_servers }}'
        - regexp: '^\s*#?\s*(FallbackNTP=).*$'
          line: 'FallbackNTP={{ fallback_ntp_servers | default("") }}'
      notify:
        - Restart systemd timesyncd

  handlers:
    - name: Restart systemd timesyncd
      ansible.builtin.service:
        name: systemd-timesyncd
        state: restarted
- name: Configure syslog-ng
  hosts: cluster_machines
  become: true
  tasks:
    - name: Set observer IP address in /etc/syslog-ng/syslog-ng.conf
      lineinfile:
        dest: /etc/syslog-ng/syslog-ng.conf
        regexp: '(^\s*#?\s*(ip\()?)("[1-9][0-9]{2}(\.[0-9]{1,3}){3}")(\))?'
        line: '\1"{{ syslog_server_ip }}"\5'
        backrefs: true
        state: present
      notify:
        - Restart systemd syslog-ng

  handlers:
    - name: Restart systemd syslog-ng
      vars:
        apply_config: "{{ apply_network_config | default(false) }}"
      ansible.builtin.service:
        name: syslog-ng@default
        state: restarted
      when:
        apply_config

- name: Configure systemd-networkd-wait-online.service
  hosts: hypervisors
  become: true
  tasks:
    - block:
        - name: Create systemd-networkd-wait-online.service.d directory
          file:
            state: directory
            path: /etc/systemd/system/systemd-networkd-wait-online.service.d
            owner: root
            group: root
            mode: 644
        - name: Copy systemd-networkd-wait-online.service overide
          template:
            src: ../templates/systemd-networkd-wait-online.service.j2
            dest: >-
              /etc/systemd/system/systemd-networkd-wait-online.service.d/override.conf
      when: cluster_interface is defined

- name: Restart machine if needed
  hosts: cluster_machines
  become: true
  tasks:
    - block:
        - name: Restart
          reboot:
        - name: Wait for host to be online
          wait_for_connection:
      when: need_reboot is defined and need_reboot
