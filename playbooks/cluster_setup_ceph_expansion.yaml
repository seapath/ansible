- name: CEPH EXPANSION VG
  hosts:
      osds
  become: true
  gather_facts: yes
  tasks:
    - name: ceph pv ang vg expansion
      block:
        - set_fact:
            unit: "{{ lvm_volumes[0].device_size | regex_replace('[0-9.]*', '') }}"
            new_pv_size: "{{ (lvm_volumes[0].device_size | regex_replace('[A-Za-z]*', '') | int) }}"
            list_pvs: "{{ ansible_lvm['pvs'] | dict2items | community.general.json_query(query) }}"
          vars:
            query: "[?value.vg=='{{ lvm_volumes[0].data_vg }}'].key"
        - name: get parted info
          community.general.parted:
            device: "{{ item | regex_replace('[0-9]*', '') }}"
            unit: "{{ unit }}"
          loop: "{{ list_pvs }}"
          register: parted_info
        - set_fact:
            part_info: "{{ parted_info.results | community.general.json_query(query) | first | first }}"
          vars:
            query: "[?item=='{{ item }}'] | [].partitions[?num==`{{ item | regex_replace('[A-Za-z/]*', '') }}`].{oldsize: size, end: end, newsize: `{{ new_pv_size }}` }"
          register: parts
          loop: "{{ list_pvs }}"
        - name: Extend partitions
          command:
            cmd: "/usr/sbin/parted -s {{ item.item | regex_replace('[0-9.]*', '') }} resizepart  {{ item.item | regex_replace('[A-Za-z/]*', '') }} {{ item.ansible_facts.part_info.end + (item.ansible_facts.part_info.newsize | int) - (item.ansible_facts.part_info.oldsize | int) }}{{ unit }}"
          loop: "{{ parts.results }}"
          when: (item.ansible_facts.part_info.newsize|int) > (item.ansible_facts.part_info.oldsize|int)
        - name: Resize PVs
          command: "pvresize {{ item }}"
          loop: "{{ list_pvs }}"
      when: ansible_lvm is defined and lvm_volumes is defined

- name: CEPH EXPANSION LV
  hosts:
      osds
  become: true
  gather_facts: yes
  serial: 1
  tasks:
      - name: Check if lv_ceph has to be expanded
        set_fact:
          expand_lv: "{{ (lvm_volumes[0].data_size | regex_replace('[A-Za-z]*', '') | int) > ansible_lvm['lvs'][lvm_volumes[0].data]['size_g'] | int }}"
        when: ansible_lvm is defined and lvm_volumes is defined
      - name: Increase ceph LV and OSD
        block:
          - name: Increase lv size
            community.general.lvol:
              vg: "{{ lvm_volumes[0].data_vg }}"
              lv: "{{ lvm_volumes[0].data }}"
              size: "{{ lvm_volumes[0].data_size }}"
            register: lv_resized
          - name: find the osd number
            find:
              paths: /var/lib/ceph/osd/
              file_type: directory
              patterns: "ceph-[0-9]"
              use_regex: yes
            register: ceph_osd_number
          - name: resize OSDS
            block:
              - name: stop ceph-osd
                ansible.builtin.systemd:
                  name: ceph-osd.target
                  state: stopped
              - name: pause 3s
                command: "sleep 3"
              - name: Resize ceph-osd
                command: "{{ item }}"
                with_items:
                  - "/usr/bin/ceph-bluestore-tool bluefs-bdev-expand --path {{ ceph_osd_number.files[0].path }}"
                  - "/usr/bin/ceph-bluestore-tool bluefs-bdev-expand --path {{ ceph_osd_number.files[0].path }}"
              - name: start ceph-osd
                ansible.builtin.systemd:
                  name: ceph-osd.target
                  state: started
              - name: wait for cluster to be HEALTH_OK
                command: '/usr/bin/ceph status --format=json'
                register: osdsdown
                until: osdsdown.stdout | from_json | community.general.json_query('health.status') == "HEALTH_OK"
                retries: 20
                delay: 2
            when:
              - lv_resized.changed
              - ceph_osd_number.files | length > 0
        when: expand_lv is defined and expand_lv
