# Copyright (C) 2022, RTE (http://www.rte-france.com)
# SPDX-License-Identifier: Apache-2.0
# This Ansible playbook start machines and ensure the PXE flash image is
# running on it. When skip_reboot is defined only boot on PXE machines which are
# halted.

---
- name: Detect which machine has to be flashed
  hosts: localhost
  gather_facts: false
  tasks:
    - name: Check if machine is online
      register: machine_up
      command: "ping -c 1 -t 1 {{ hostvars[item]['ansible_host'] }}"
      failed_when: machine_up.rc > 1
      changed_when: false
      when: 
        - skip_reboot is defined
        - skip_reboot |bool
      loop: "{{ groups['pxe_machines'] }}"
    - name: Register if machine need to be started
      set_fact:
        machines_to_reboot: "{{ machines_to_reboot | default([]) + [item.item] }}"
        ports: "{{ ports | default([]) + [hostvars[item.item]['plug_port']] }}"
      loop: "{{ machine_up.results }}"
      when:
        - skip_reboot is defined
        - skip_reboot |bool
        - item.rc == 1
    - name: Set all machine to be restarted
      set_fact:
        machines_to_reboot: pxe_machines
      when: skip_reboot is undefined or not skip_reboot |bool
    - name: exit playbook, if no machine has to be flashed
      fail:
        msg: "No machine to be flashed was found."
      when: machines_to_reboot is undefined or not machines_to_reboot
    - name: "Machine to setup:"
      debug:
        var: machines_to_reboot

- name: Launch PXE server on CI
  hosts: localhost
  vars:
    ip: "{{ power_control_ip | default(eg_ip) }}"
    passwd: "{{ power_control_passwd | default(eg_passwd) }}"
    powerup_script: "{{ power_control_script | default('../scripts/eg_pms2_lan_driver_power.sh') }}"
    pxe_type: "{{ pxe_compatibility | default('dual') }}"
  tasks:
      - name: Create PXE configuration file
        template:
            src: ../templates/pxe_extra_config.conf.j2
            dest: "{{ playbook_dir }}/pxe_extra_config.conf"
      - name: Start the PXE server
        docker_container:
            recreate: true
            network_mode: host
            volumes:
                - "{{ playbook_dir }}/../pxe_images:/images:ro"
                - "{{ playbook_dir }}/pxe_extra_config.conf:/etc/dnsmasq.d/pxe_extra_config.conf:ro"
            auto_remove: true
            state: "started"
            image: "seapath-pxe:latest"
            name: "seapath_flash_pxe"
            capabilities:
                - "net_admin"
                - "net_raw"
            env:
                DHCP_RANGE_BEGIN: "{{ dhcp_range_begin }}"
                DHCP_RANGE_END: "{{ dhcp_range_end }}"
                BIND_INTERFACE: "{{ dhcp_bind_interface }}"
                SERVER_ADDRESS: "{{ pxe_server_address }}"
                PXE: "{{ pxe_type }}"
      - name: Start machines
        include_tasks: tasks/start_machine.yaml
        with_items: "{{ ports }}"
        when:
          - skip_reboot is defined
          - skip_reboot |bool

- import_playbook: ci_restart_machines.yaml
  vars:
      machines: "{{ hostvars['localhost'].machines_to_reboot | default('none') }}"


- name: Check all machines have boot on the flash-pxe image
  hosts: "{{ hostvars['localhost'].machines_to_reboot | default('none') }}"
  tasks:
      - name: "Check {{ inventory_hostname }} have boot on the flash-pxe image"
        lineinfile:
            path: /etc/os-release
            state: present
            line: NAME="Seapath Flash Yocto distribution"
        check_mode: true

- name: Stop the PXE server
  hosts: localhost
  tasks:
      - name: Stop ci_pxe container
        docker_container:
            state: "stopped"
            name: "seapath_flash_pxe"
