# Copyright (C) 2022, RTE (http://www.rte-france.com)
# SPDX-License-Identifier: Apache-2.0
---

- name: Create groups
  group:
    name: "{{ item }}"
    state: present
  when: not revert
  with_items:
    - ansible
    - privileged

- name: "Create admin user"
  user:
    name: admin
    comment: Ansible user
    groups: ansible,privileged
    append: yes
  when: not revert

- name: "Add kernel parameters in grub"
  lineinfile:
    dest: /etc/default/grub
    regexp: "^(GRUB_CMDLINE_LINUX=(?!.* {{ item }})\"[^\"]*)(\".*)"
    line: '\1 {{ item }}\2'
    state: present
    backrefs: yes
  register: updategrub
  with_items: "{{ kernel_params }}"
  when: not revert

- name: "Revert kernel parameters added in grub"
  lineinfile:
    dest: /etc/default/grub
    regexp: "^(GRUB_CMDLINE_LINUX=\".*)( {{ item }})(.*\")$"
    line: '\1\3'
    state: present
    backrefs: yes
  register: updategrub
  with_items: "{{ kernel_params }}"
  when: revert

- name: "Disable coredumps"
  lineinfile:
    dest: /etc/sysctl.d/50-coredump.conf
    regexp: "^kernel.core_pattern=/dev/null$"
    line: "kernel.core_pattern=/dev/null"
    create: yes
    state: present
  notify: update sysfs values using sysctl
  when: not revert
- name: "Revert coredump disabling"
  lineinfile:
    dest: /etc/sysctl.d/50-coredump.conf
    regexp: "^kernel.core_pattern=/dev/null$"
    state: absent
  notify: update sysfs values using sysctl
  when: revert

- name: "Disable kexec"
  lineinfile:
    dest: /etc/sysctl.d/50-kexec.conf
    regexp: "^kernel.kexec_load_disabled=1$"
    line: "kernel.kexec_load_disabled=1"
    create: yes
    state: present
  notify: update sysfs values using sysctl
  when: not revert
- name: "Revert kexec disabling"
  lineinfile:
    dest: /etc/sysctl.d/50-kexec.conf
    regexp: "^kernel.kexec_load_disabled=1$"
    state: absent
  notify: update sysfs values using sysctl
  when: revert

- name: "Disable binfmt_misc"
  lineinfile:
    dest: /etc/sysctl.d/50-binfmt_misc.conf
    regexp: "^fs.binfmt_misc.status=0$"
    line: "fs.binfmt_misc.status=0"
    create: yes
    state: present
  notify: update sysfs values using sysctl
  when: not revert
- name: "Revert binfmt_misc disabling"
  lineinfile:
    dest: /etc/sysctl.d/50-binfmt_misc.conf
    regexp: "^fs.binfmt_misc.status=0$"
    state: absent
  notify: update sysfs values using sysctl
  when: revert

- name: "Install hardened sysfs rules"
  copy:
    src: ../src/debian/90-sysctl-hardening.conf
    dest: /etc/sysctl.d/zz-sysctl-hardening.conf
  notify: update sysfs values using sysctl
  when: not revert
- name: "Uninstall hardened sysfs rules"
  file:
    path: /etc/sysctl.d/zz-sysctl-hardening.conf
    state: absent
  notify: update sysfs values using sysctl
  when: revert

- name: "Install network hardened sysfs rules"
  copy:
    src: ../src/debian/99-sysctl-network.conf
    dest: /etc/sysctl.d/99-sysctl-network.conf
  notify: update sysfs values using sysctl
  when: not revert
- name: "Uninstall network hardened sysfs rules"
  file:
    path: /etc/sysctl.d/99-sysctl-network.conf
    state: absent
  notify: update sysfs values using sysctl
  when: revert

- name: "Force loading nf_conntrack at boot"
  lineinfile:
    dest: /etc/modules-load.d/modules.conf
    regexp: "^nf_conntrack$"
    line: "nf_conntrack"
    state: present
  when: not revert
- name: "Disable force loading nf_conntrack at boot"
  lineinfile:
    dest: /etc/modules-load.d/modules.conf
    regexp: "^nf_conntrack$"
    state: absent
  when: revert

- name: "Install random-root-passwd.service"
  copy:
    src: ../src/debian/random-root-passwd.service
    dest: /etc/systemd/system/random-root-passwd.service
  when: not revert
  register: random_root
- name: "enable random-root-passwd.service"
  ansible.builtin.systemd:
    name: random-root-passwd.service
    enabled: yes
    state: started
  when: not revert and random_root.changed
- name: "Disable random-root-passwd.service"
  file:
    path: /etc/systemd/system/sysinit.target.wants/random-root-passwd.service
    state: absent
  when: revert
- name: "Uninstall random-root-passwd.service"
  file:
    path: /etc/systemd/system/random-root-passwd.service
    state: absent
  when: revert
  register: random_root

- name: "Enable private TMPDIR"
  copy:
    src: ../src/debian/mktmpdir.sh
    dest: /etc/profile.d/mktmpdir.sh
  when: not revert
- name: "Disable private TMPDIR"
  file:
    path: /etc/profile.d/mktmpdir.sh
    state: absent
  when: revert

- name: "Set bash timeout to 300s"
  copy:
    src: ../src/debian/terminal_idle.sh
    dest: /etc/profile.d/terminal_idle.sh
  when: not revert
- name: "Unset bash timeout"
  file:
    path: /etc/profile.d/terminal_idle.sh
    state: absent
  when: revert

- name: Install openssh hardening rules
  template:
    src: ../src/debian/ssh-audit_hardening.conf.j2
    dest: /etc/ssh/sshd_config.d/ssh-audit_hardening.conf
  when: not revert
- name: Uninstall openssh hardening rules
  file:
    path: /etc/ssh/sshd_config.d/ssh-audit_hardening.conf
    state: absent
  when: revert

- name: Wait for DHCP for SSH
  lineinfile:
    dest: /lib/systemd/system/ssh.service
    regexp: "^After="
    line: "After=network.target auditd.service network-online.target"
    state: present
  when: not revert

- name: Install sudo ansible group rules
  copy:
    src: ../src/debian/sudoers/ansible
    dest: /etc/sudoers.d/ansible
    owner: root
    group: root
    mode: '0440'
  when: not revert
- name: Uninstall sudo ansible group rules
  file:
    path: /etc/sudoers.d/ansible
    state: absent
  when:  revert

- name: sudo warning
  debug:
    msg:
      - Give all right to admin user via sudo.
      - This is not a temporal rules.
      - Custom sudo rules must be defined to restrict commands availables using sudo.
  when: not revert
- name: Install sudo admin rules
  copy:
    src: ../src/debian/sudoers/admin
    dest: /etc/sudoers.d/admin
    owner: root
    group: root
    mode: '0440'
  when: not revert
- name: Uninstall sudo admin rules
  file:
    path: /etc/sudoers.d/admin
    state: absent
  when: revert

- name: Find sudoers files
  find:
    paths: /etc/sudoers.d/
    exclude: README
  register: sudoers_files
  when: not revert
- name: Fix sudoers.d permission
  file:
    path: "{{ item.path }}"
    owner: root
    group: root
    mode: '0440'
  with_items: "{{ sudoers_files.files }}"
  when: not revert

- name: adding sudo users to group privileged
  user:
    name: "{{ item }}"
    groups: privileged
    append: yes
  with_items:
   - ceph
   - Debian-snmp
   - virtu
   - ansible
  when: not revert
  register: groups_changed

- name: Reboot to update group changes
  reboot:
  when:
    - not revert
    - groups_changed.changed

- name: Wait for host to be online
  wait_for_connection:
  when:
    - not revert
    - groups_changed.changed

- name: Configure sudo to be run only users member of the privileged group
  file:
    path: /usr/bin/sudo
    owner: root
    group: privileged
    mode: '4750'
  when: not revert
- name: Restore sudo permissions
  file:
    path: /usr/bin/sudo
    owner: root
    group: root
    mode: '4755'
  when: revert

- name: "Configure login.defs"
  lineinfile:
    dest: /etc/login.defs
    regexp: "^{{ item }}$"
    line: "{{ item }}"
    state: present
  with_items:
    - FAIL_DELAY 3
    - PASS_MAX_DAYS 90
    - SHA_CRYPT_MAX_ROUNDS 65536
    - SHA_CRYPT_MIN_ROUNDS 65536
  when: not revert
- name: "Unconfigure login.defs"
  lineinfile:
    dest: /etc/login.defs
    regexp: "^{{ item }}$"
    state: absent
  with_items:
    - FAIL_DELAY 3
    - PASS_MAX_DAYS 90
    - SHA_CRYPT_MAX_ROUNDS 65536
    - SHA_CRYPT_MIN_ROUNDS 65536
  when: revert

- name: Disable su
  copy:
    src: ../src/debian/hardened_pam_su
    dest: /etc/pam.d/su
  when: not revert
- name: Disable su-l
  copy:
    src: ../src/debian/hardened_pam_su
    dest: /etc/pam.d/su-l
  when: not revert
- name: Restore su pam setting
  copy:
    src: ../src/debian/default_pam_su
    dest: /etc/pam.d/su
  when: revert
- name: Restore su -l pam setting
  copy:
    src: ../src/debian/default_pam_su-l
    dest: /etc/pam.d/su-l
  when: revert

- name: Create securetty
  copy:
    content: ""
    dest: /etc/securetty
    force: no
    group: sys
    owner: root
    mode: 0644
  when: not revert
- name: Remove securetty
  file:
    path: /etc/securetty
    state: absent
  when: revert

- name: Enable securetty in pam login
  lineinfile:
    dest: /etc/pam.d/login
    insertafter: 'auth       optional   pam_faildelay.so  delay=3000000'
    line: "auth		[success=ok ignore=ignore user_unknown=ignore default=die]  	pam_securetty.so"
  when: not revert
- name: Disable securetty in pam login
  lineinfile:
    dest: /etc/pam.d/login
    regexp: "^auth		\\[success=ok ignore=ignore user_unknown=ignore default=die\\]  	pam_securetty.so$"
    state: absent
  when: revert

- name: Create systemd service.d directories
  file:
    path: "/etc/systemd/system/{{ item }}.service.d/"
    state: directory
    owner: root
    group: root
    mode: 0755
  with_items: "{{ hardened_services }}"
- name: Add systemd service hardening rules
  copy:
    src: "../src/debian/{{ item }}_hardening.conf"
    dest: "/etc/systemd/system/{{ item }}.service.d/hardening.conf"
  register: services_to_restart
  with_items: "{{ hardened_services }}"

- name: Uninstall apt packages not required after installation
  apt:
    name:
      - fdisk
      - ifupdown
      - libfdisk1
    state: absent
    purge: yes
    autoremove: yes
  when: not revert

- name: Disable unused systemd services
  systemd:
    unit: "{{ item }}"
    state: stopped
    enabled: no
    no_block: yes
  when: not revert
  with_items:
    - apt-daily-upgrade.timer
    - apt-daily.timer
    - systemd-resolved.service

- name: Set grub password
  template:
    src: "01_password.j2"
    dest: /etc/grub.d/01_password
    group: "root"
    owner: "root"
    mode: 0755
  when: not revert
- name: Unset grub password
  file:
    state: absent
    path: /etc/grub.d/01_password
  when: revert

- name: copy syslog.conf
  copy:
    src: ../src/debian/auditd/syslog.conf
    dest: /etc/audit/plugins.d/syslog.conf

- name: copy audit.rules
  copy:
    src: ../src/debian/auditd/audit.rules
    dest: /etc/audit/rules.d/audit.rules

- name: Update grub
  command: update-grub

- name: Final reboot to apply changes
  reboot:
